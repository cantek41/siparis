@model siparis.Models.IndexDataViewModel
@using siparis.Models
@{

}
<script type="text/javascript">
    function secim(s, e, f) {
        var value = s.GetChecked();
        if (value) {
            f.SelectAll();
        }
        else {
            f.UnselectAll();
        }
    }
</script>



@using (Html.BeginForm("CategorizedProducts", "Home"))
{
    <div class="brands_products">
        <!--Main Group-->
        <h2 style="margin-top:20px;">@siparis.Resorces.Language.MainGroup</h2>
        @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,MAIN_GRUOP); }";
        }).GetHtml())

        @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "MAIN_GRUOP";
            settings.Properties.ValueField = "ID";
            settings.Properties.TextField = "EXP_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            //  settings.Properties.ClientSideEvents.Init = "function(s, e) { alert(s.cpCustom); }";
            ////  settings.CustomJSProperties += (s, e) => { e.Properties["cpCustom"] = "customValue"; };
            settings.Init = (sender, e) =>
                {
                };
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                //cbl.ClientSideEvents.SelectedIndexChanged = "function(s, e) { secim(s,e); }";
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Count(x => x.MAIN_GRUP == (int)item.Value);
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };

        }).BindList(Model.stokMainGroup).GetHtml()
        )
    </div><!--/Main Group-->
    <div>
        <!--filtre buton-->
        @Html.DevExpress().Button(settings =>
        {
            settings.Name = "Filter";
            settings.Text = @siparis.Resorces.Language.Filter;
            settings.UseSubmitBehavior = true;
        }).GetHtml()
        @Html.DevExpress().Button(settings =>
        {
            settings.Name = "UnFilter";
            settings.Text = @siparis.Resorces.Language.UnFilter;
            settings.UseSubmitBehavior = true;
        }).GetHtml()

    </div><!--/filtre buton-->
    if (HttpContext.Current.Request.Path.Contains("CategorizedProducts"))
    {

        <div class="brands_products">
            <!--sub group 1-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.SubGroup1</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "allsub";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,SUB_GROUP); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SUB_GROUP";
            settings.Properties.ValueField = "ID";
            settings.Properties.TextField = "EXP_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.CheckBoxStyle.Wrap = DefaultBoolean.True;
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.SUB_GRUP1 == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };


        }).BindList(Model.stokSubGroup).GetHtml()
            )
        </div><!--/sub group 1-->
        <div class="brands_products">
            <!--sub group 2-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.SubGroup2</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all2";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,SUB_GROUP2); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SUB_GROUP2";
            settings.Properties.ValueField = "ID";
            settings.Properties.TextField = "EXP_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.SUB_GRUP2 == (int)item.Value).Count();

                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };

        }).BindList(Model.stokSubGroup2).GetHtml()
            )
        </div><!--/sub group 2-->
        <div class="brands_products">
            <!--category-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Category</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all3";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,CATEGORY); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "CATEGORY";
            settings.Properties.ValueField = "STOK_GROUP_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.CATEGORY_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };

        }).BindList(Model.stokCategory).GetHtml()
            )
        </div><!--/category-->
        <div class="brands_products">
            <!--brands_products-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Brands</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all4";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,BRAND); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "BRAND";
            settings.Properties.ValueField = "BRAND_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.BRAND_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };

        }).BindList(Model.stokbrand).GetHtml()
            )
        </div><!--/brands_products-->
        <div class="brands_products">
            <!--model-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Model</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all5";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,MODEL); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "MODEL";
            settings.Properties.ValueField = "MODEL_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.MODEL_CODE == (int)item.Value).Count();

                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokModel).GetHtml()
            )
        </div><!--/model-->
        <div class="brands_products">
            <!--size_products-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Size</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all6";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,SIZE); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SIZE";
            settings.Properties.ValueField = "BODY_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.BODY_CODE == (int)item.Value).Count();

                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokBody).GetHtml()
            )
        </div><!--/size-->
        <div class="brands_products">
            <!--color-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Color</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all7";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,COLOR); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "COLOR";
            settings.Properties.ValueField = "COLOR_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.COLOR_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokcolor).GetHtml()
            )
        </div><!--/color-->
        <div class="brands_products">
            <!--Season-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Season</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all8";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,SEASON); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SEASON";
            settings.Properties.ValueField = "SEASON_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.SEASON_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokseason).GetHtml()
            )
        </div><!--/season-->
        <div class="brands_products">
            <!--PACKET-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Pocket</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all9";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,PACKET); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "PACKET";
            settings.Properties.ValueField = "PACKET_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.PACK_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokPacket).GetHtml()
            )
        </div><!--/PACKET-->
        <div class="brands_products">
            <!--PACKET-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Rayon</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all10";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,RAYON); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "RAYON";
            settings.Properties.ValueField = "RAYON_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.RAYON_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokRayon).GetHtml()
            )
        </div><!--/RAYON-->
        <div class="brands_products">
            <!--SECTOR-->
            <h2 style="margin-top:20px;">@siparis.Resorces.Language.Sector</h2>
            @(Html.DevExpress().CheckBox(s =>
        {
            s.Name = "all11";
            s.Text = "All";
            s.Checked = true;
            s.Properties.ClientSideEvents.CheckedChanged = "function(s, e) { secim(s,e,SECTOR); }";
        }).GetHtml())
            @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SECTOR";
            settings.Properties.ValueField = "SECTOR_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    int count = @Model.stokcard.Where(x => x.RAYON_CODE == (int)item.Value).Count();
                    item.Text += " (" + count + ")";
                    if (count > 0)
                    {
                        item.Selected = true;
                    }
                }
            };
        }).BindList(Model.stokSector).GetHtml()
            )
        </div><!--/SECTOR-->
        <div>
            <!-- filter button-->
            @Html.DevExpress().Button(settings =>
        {
            settings.Name = "Filter_";
            settings.Text = @siparis.Resorces.Language.Filter;
            settings.UseSubmitBehavior = true;
        }).GetHtml()


        </div><!--/filter button-->
    }

}