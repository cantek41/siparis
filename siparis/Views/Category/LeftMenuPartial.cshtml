@model siparis.Models.IndexDataViewModel
@using siparis.Models
@{
    foreach (var stok in Model.stokgroup)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a href="/Category/CategorizedProducts?Id=@stok.STOK_GROUP_CODE">
                        <span class="badge pull-right">(@Model.stokcard.Where(x => x.CATEGORY_CODE == stok.STOK_GROUP_CODE).Count())</span>
                        @stok.NAME_TR
                    </a>
                </h4>
            </div>
        </div>

    }
}

@using (Html.BeginForm())
{
    <div class="brands_products">
        <!--brands_products-->
        <h2 style="margin-top:20px;">@Res.resGetir(13)</h2>

        @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "BRAND";
            settings.Properties.ValueField = "BRAND_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    item.Selected = true;
                    item.Text += " (" + @Model.stokcard.Where(x => x.BRAND_CODE == (int)item.Value).Count() + ")";
                }
            };

        }).BindList(Model.stokbrand).GetHtml()
        )



    </div><!--/brands_products-->
    <div class="brands_products">
        <!--brands_products-->
        <h2 style="margin-top:20px;">@Res.resGetir(17)</h2>
        @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SIZE";
            settings.Properties.ValueField = "BODY_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    item.Selected = true;
                    item.Text += " (" + @Model.stokcard.Where(x => x.BODY_CODE == (int)item.Value).Count() + ")";
                }
            };

        }).BindList(Model.stokBody).GetHtml()
        )



    </div><!--/brands_products-->

    <div class="brands_products">
        <!--brands_products-->
        <h2 style="margin-top:20px;">@Res.resGetir(18)</h2>
        @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "COLOR";
            settings.Properties.ValueField = "COLOR_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    item.Selected = true;
                    item.Text += " (" + @Model.stokcard.Where(x => x.COLOR_CODE == (int)item.Value).Count() + ")";
                }
            };

        }).BindList(Model.stokcolor).GetHtml()
        )
    </div><!--/brands_products-->

    <div class="brands_products">
        <h2 style="margin-top:20px;">@Res.resGetir(19)</h2>

        @(Html.DevExpress().CheckBoxList(settings =>
        {
            settings.Name = "SEASON";
            settings.Properties.ValueField = "SEASON_CODE";
            settings.Properties.TextField = "NAME_TR";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.RepeatLayout = System.Web.UI.WebControls.RepeatLayout.Table;
            settings.Properties.RepeatDirection = System.Web.UI.WebControls.RepeatDirection.Horizontal;
            settings.Properties.RepeatColumns = 1;
            settings.ControlStyle.Border.BorderWidth = 0;
            settings.PreRender = (sender, e) =>
            {
                ASPxCheckBoxList cbl = (ASPxCheckBoxList)sender;
                foreach (ListEditItem item in cbl.Items)
                {
                    item.Selected = true;
                    item.Text += " (" + @Model.stokcard.Where(x => x.SEASON_CODE == (int)item.Value).Count() + ")";
                }
            };
        }).BindList(Model.stokseason).GetHtml()
        )

    </div>

    <div class="price-range">
        <!--price-range-->
        <h2>@Res.resGetir(20)</h2>
        <div class="well text-center">
            <input name="PRICE" type="text" class="span2" value="" data-slider-min="0" data-slider-max="600" data-slider-step="5" data-slider-value="[250,450]" id="sl2"><br />
            <b class="pull-left">$ 0</b> <b class="pull-right">$ 600</b>
        </div>
    </div><!--/price-range-->

    <div>
        @Html.DevExpress().Button(settings =>
        {
            settings.Name = "Filter";
            settings.Text = "Filter";
            settings.UseSubmitBehavior = true;
        }).GetHtml()

    </div>
}