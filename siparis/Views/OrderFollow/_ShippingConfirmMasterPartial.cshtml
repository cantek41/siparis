
@{
    bool masterOnayla = false;
    bool masterEdit = false;
    bool masterDelete = false;
    string[] rol = Roles.GetRolesForUser();
    switch (rol[0])
    {
        case "Admin":
            masterOnayla = true;
            masterEdit = true;
            masterDelete = true;
            break;
        case "Bayi":
            if ((int)TempData["DOCUMENT_TYPE"] == 15 || (int)TempData["DOCUMENT_TYPE"] == 19)
            {
                masterOnayla = true;
                masterDelete = true;
            }
            break;
        case "Depo":
            if ((int)TempData["DOCUMENT_TYPE"] == 18 || (int)TempData["DOCUMENT_TYPE"] == 20 || (int)TempData["DOCUMENT_TYPE"] == 24)
            {
                masterOnayla = true;
            }
            if ((int)TempData["DOCUMENT_TYPE"] == 20)
            {
                masterDelete = true;
            }
            break;
        default:
            break;
    }
}
@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "grid";
        settings.CallbackRouteValues = new { Controller = "OrderFollow", Action = "GridViewPartialOpportunity" };
        settings.CallbackRouteValues = new { Controller = "OrderFollow", Action = "MasterDetailMasterPartial", DOCUMENT_TYPE = TempData["DOCUMENT_TYPE"] };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.CommandColumn.Visible = true;

        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 500;
        settings.SettingsPager.PageSize = 50;
        settings.SettingsPager.NumericButtonCount = 6;
        settings.SettingsPager.EnableAdaptivity = true;

        //Onayla
        if (masterOnayla)
        {
            settings.CustomActionRouteValues = new { Controller = "OrderFollow", Action = "CustomButtonClick" };
            settings.CommandColumn.CustomButtons.Add(new GridViewCommandColumnCustomButton()
            {
                ID = "First10",
                Text = siparis.Resorces.Language.Approved
            });
            settings.ClientSideEvents.CustomButtonClick = "function(s,e){grid.PerformCallback({clickedButton : s.GetRowKey(e.visibleIndex)});}";
        }
        ///end onayla

        //delete
        if (masterDelete)
        {
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "OrderFollow", Action = "Cencel" };
            settings.CommandColumn.ShowDeleteButton = true;
            settings.SettingsCommandButton.DeleteButton.Text = siparis.Resorces.Language.Delete;
            settings.SettingsBehavior.ConfirmDelete = true;
        }
        //end delete

        settings.KeyFieldName = "OPPORTUNITY_CODE";

        settings.Columns.Add(column =>
        {
            column.FieldName = "DOCUMENT_DATE";
            column.Name = "DOCUMENT_DATE";
            column.Caption = @siparis.Resorces.Language.DATE;
            var txtProperties = column.PropertiesEdit as TextBoxProperties;
            txtProperties.MaskSettings.Mask = "dd/mm/yyyy";
        });
        settings.Columns.Add(column =>
            {
                column.FieldName = "OPPORTUNITY_CODE";
                column.Name = "OPPORTUNITY_CODE";
                column.Caption = @siparis.Resorces.Language.OPPORTUNITY_CODE;
            });
        settings.Columns.Add(column =>
        {
            column.FieldName = "COMPANY_CODE";
            column.Name = "COMPANY_CODE";
            column.Caption = @siparis.Resorces.Language.Company;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "CONTACT_CODE";
            column.Name = "CONTACT_CODE";
            column.Caption = @siparis.Resorces.Language.CONTACS;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "APPOINTED_USER_CODE";
            column.Name = "APPOINTED_USER_CODE";
            column.Caption = @siparis.Resorces.Language.USER;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "TOTAL";
            column.Name = "TOTAL";
            column.Caption = @siparis.Resorces.Language.Total;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CREATE_USER";
            column.Name = "CREATE_USER";
            column.Caption = @siparis.Resorces.Language.Create_User;
        });

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = true;
        settings.SetDetailRowTemplateContent(c =>
        {
            //ViewContext.Writer.Write(
            //    "Contact Phone: <b>" +
            //        DataBinder.Eval(c.DataItem, "Phone") + "</b>, Fax: <b>" +
            //            DataBinder.Eval(c.DataItem, "Fax") + "</b>" +
            //    "<br />" +
            //    "<br />"
            //);
            Html.RenderAction("MasterDetailDetailPartial", new { CustomerID = DataBinder.Eval(c.DataItem, "OPPORTUNITY_CODE") });
        });
        settings.PreRender = (sender, e) =>
        {
            if (((MVCxGridView)sender).DetailRows.VisibleCount > 0)
                ((MVCxGridView)sender).DetailRows.ExpandRow(0);
        };
    }).Bind(Model).GetHtml()
