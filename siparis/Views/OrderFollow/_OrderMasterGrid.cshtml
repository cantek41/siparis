@{
    bool masterOnayla = false;
    bool masterEdit = false;
    bool masterDelete = false;
    string[] rol = Roles.GetRolesForUser();
    switch (rol[0])
    {
        case "Admin":
            masterOnayla = true;
            masterEdit = true;
            masterDelete = true;
            break;
        case "Bayi":
            if ((int)TempData["DOCUMENT_TYPE"] == 15 || (int)TempData["DOCUMENT_TYPE"] == 19)
            {
                masterOnayla = true;
                masterDelete = true;
            }
            break;
        case "Depo":
            if ((int)TempData["DOCUMENT_TYPE"] == 18 || (int)TempData["DOCUMENT_TYPE"] == 20 || (int)TempData["DOCUMENT_TYPE"] == 24)
            {
                masterOnayla = true;
            }
            if ((int)TempData["DOCUMENT_TYPE"] == 20)
            {
                masterDelete = true;
            }
            break;
        default:
            break;
    }
}
@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "grid";
        settings.CallbackRouteValues = new { Controller = "OrderFollow", Action = "OrderMasterGridPartial", DOCUMENT_TYPE = TempData["DOCUMENT_TYPE"] };
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.CommandColumn.Visible = true;

        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = 400;
        settings.SettingsPager.PageSize = 50;
        settings.SettingsPager.NumericButtonCount = 6;
        settings.SettingsPager.EnableAdaptivity = true;

        //Onayla

        ///end onayla

        //delete
        if (masterDelete)
        {
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "OrderFollow", Action = "Cencel" };
            settings.CommandColumn.ShowDeleteButton = true;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.SettingsCommandButton.DeleteButton.Text = siparis.Resorces.Language.Delete;
        }
        //end delete

        settings.KeyFieldName = "OPPORTUNITY_CODE";

        settings.Columns.Add(column =>
        {
            column.FieldName = "DOCUMENT_DATE";
            column.Name = "DOCUMENT_DATE";
            column.Caption = @siparis.Resorces.Language.DATE;
            var txtProperties = column.PropertiesEdit as TextBoxProperties;
            txtProperties.MaskSettings.Mask = "dd/mm/yyyy";
        });
        settings.Columns.Add(column =>
            {
                column.FieldName = "OPPORTUNITY_CODE";
                column.Name = "OPPORTUNITY_CODE";
                column.Caption = @siparis.Resorces.Language.OPPORTUNITY_CODE;
            });
        settings.Columns.Add(column =>
        {
            column.FieldName = "COMPANY_CODE";
            column.Name = "COMPANY_CODE";
            column.Caption = @siparis.Resorces.Language.Company;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "CONTACT_CODE";
            column.Name = "CONTACT_CODE";
            column.Caption = @siparis.Resorces.Language.CONTACS;
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "APPOINTED_USER_CODE";
            column.Name = "APPOINTED_USER_CODE";
            column.Caption = @siparis.Resorces.Language.USER;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "TOTAL";
            column.Name = "TOTAL";
            column.Caption = @siparis.Resorces.Language.Total;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CREATE_USER";
            column.Name = "CREATE_USER";
            column.Caption = @siparis.Resorces.Language.Create_User;
        });

        settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
        settings.SettingsDetail.ShowDetailRow = true;
      
        settings.SetDetailRowTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<b>Depo Seç:</b> " +
                  @Html.DevExpress().ComboBox(
                s =>
                {
                    s.Name = "ChooseWareHouse";
                    s.Width = 180;
                    s.SelectedIndex = 0;
                    s.Properties.DisplayFormatString = "Depo Seç";                                    
                    s.Properties.TextField = "Value";
                    s.Properties.ValueField = "Key";
                    s.Properties.ValueType = typeof(int);
                }
            ).BindList(siparis.Controllers.BaseController.getWareHouse()).GetHtml() +
              @Html.DevExpress().Button(
            s =>
            {
                s.Name = "btnNative";
                s.Width = 90;
                s.RouteValues = new { Controller = "OrderFollow", Action = "OrderAllProductWareHouseSubmit", oppMasterCode = c.KeyValue, wareHouse = " " };
                s.Height = 25;
                s.Text = "Onayla";
                s.Styles.Native = true;
                s.ClientSideEvents.Click = "OnClick";
            }
        ).GetHtml()
            +
                "<br />" +
                "<br />"

            );
            Html.RenderAction("OrderDetailGrid", new { CustomerID = DataBinder.Eval(c.DataItem, "OPPORTUNITY_CODE") });
        });
        settings.PreRender = (sender, e) =>
        {
            if (((MVCxGridView)sender).DetailRows.VisibleCount > 0)
                ((MVCxGridView)sender).DetailRows.ExpandRow(0);
        };
    }).Bind(Model).GetHtml()
